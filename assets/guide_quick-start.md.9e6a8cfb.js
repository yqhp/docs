import{_ as a,o as e,c as o,O as i}from"./chunks/framework.c0965656.js";const q=JSON.parse('{"title":"平台快速入门","description":"","frontmatter":{},"headers":[],"relativePath":"guide/quick-start.md","filePath":"guide/quick-start.md"}'),l={name:"guide/quick-start.md"},d=i('<h1 id="平台快速入门" tabindex="-1">平台快速入门 <a class="header-anchor" href="#平台快速入门" aria-label="Permalink to &quot;平台快速入门&quot;">​</a></h1><p>登录 yqhp 系统，<code>http://{宿主机 ip}</code>，账号密码: <code>admin / admin</code></p><h2 id="系统管理" tabindex="-1">系统管理 <a class="header-anchor" href="#系统管理" aria-label="Permalink to &quot;系统管理&quot;">​</a></h2><h3 id="项目管理" tabindex="-1">项目管理 <a class="header-anchor" href="#项目管理" aria-label="Permalink to &quot;项目管理&quot;">​</a></h3><ul><li>项目之间数据相互隔离</li><li><code>设置插件</code>，配置项目可用的插件</li></ul><h3 id="插件管理" tabindex="-1">插件管理 <a class="header-anchor" href="#插件管理" aria-label="Permalink to &quot;插件管理&quot;">​</a></h3><p>以 Appium 插件为例</p><ol><li>下载 Appium 插件: <a href="https://github.com/yqhp/yqhp/releases" target="_blank" rel="noreferrer">appium-plugin-{version}.jar</a></li><li>新建插件 -&gt; 名称: <code>Appium-{version}</code> -&gt; 保存</li><li>上传下载好的插件: <code>appium-plugin-{version}.jar</code></li><li>项目配置 Appium 插件: 系统管理/项目管理 -&gt; 设置插件 -&gt; 勾选 <code>Appium-{version}</code></li></ol><h3 id="用户管理" tabindex="-1">用户管理 <a class="header-anchor" href="#用户管理" aria-label="Permalink to &quot;用户管理&quot;">​</a></h3><ul><li><code>设置角色</code>，<code>超级管理员</code>拥有所有权限</li><li><code>设置项目</code>，配置用户参与的项目。拥有<code>超级管理员</code>角色的用户，无需设置，默认参与所有项目</li></ul><h2 id="coding" tabindex="-1">Coding <a class="header-anchor" href="#coding" aria-label="Permalink to &quot;Coding&quot;">​</a></h2><h3 id="设备调试区域-左侧" tabindex="-1">设备调试区域（左侧） <a class="header-anchor" href="#设备调试区域-左侧" aria-label="Permalink to &quot;设备调试区域（左侧）&quot;">​</a></h3><ul><li>选择设备调试</li><li>设备管理</li><li>远程真机服务</li></ul><h3 id="目录文件树-右侧" tabindex="-1">目录文件树（右侧） <a class="header-anchor" href="#目录文件树-右侧" aria-label="Permalink to &quot;目录文件树（右侧）&quot;">​</a></h3><p>目录与 doc（java 脚本） 管理，目录与 doc 支持<code>拖拽排序</code>。</p><p>doc 状态:</p><ul><li>草稿: 不可用</li><li>禁用: 不可用</li><li>过时: 可用</li><li>发布: 可用</li></ul><p>doc 类型:</p><ul><li>初始化: 设备调试会话建立后，<code>自动执行的doc（状态需为可用）</code></li><li>Action: 可以理解为一个用例</li></ul><h3 id="代码编辑区域-中间" tabindex="-1">代码编辑区域（中间） <a class="header-anchor" href="#代码编辑区域-中间" aria-label="Permalink to &quot;代码编辑区域（中间）&quot;">​</a></h3><ul><li>代码自动保存</li><li>设备调试会话建立后，输入代码自动提示</li><li>快捷键 <ul><li>F1: 执行当前选中的代码 或 光标所在行的代码</li><li>Ctrl + Space: 代码提示</li></ul></li></ul><h3 id="控制台-底部" tabindex="-1">控制台（底部） <a class="header-anchor" href="#控制台-底部" aria-label="Permalink to &quot;控制台（底部）&quot;">​</a></h3><h4 id="jshell" tabindex="-1">JShell <a class="header-anchor" href="#jshell" aria-label="Permalink to &quot;JShell&quot;">​</a></h4><p>代码与插件执行日志</p><h4 id="appiumlog" tabindex="-1">AppiumLog <a class="header-anchor" href="#appiumlog" aria-label="Permalink to &quot;AppiumLog&quot;">​</a></h4><p>Appium 日志</p><h4 id="plugin" tabindex="-1">Plugin <a class="header-anchor" href="#plugin" aria-label="Permalink to &quot;Plugin&quot;">​</a></h4><p>当前项目配置的插件，设备调试会话建立后将<code>自动加载</code></p><h2 id="计划" tabindex="-1">计划 <a class="header-anchor" href="#计划" aria-label="Permalink to &quot;计划&quot;">​</a></h2><h3 id="运行模式" tabindex="-1">运行模式 <a class="header-anchor" href="#运行模式" aria-label="Permalink to &quot;运行模式&quot;">​</a></h3><ul><li>高效模式: 将 Action 平均分配给设备执行，尽快执行完所有 Action。如: 该计划添加了 2 个可用 Action: <code>a1, a2</code>，2 个设备: <code>d1, d2</code>，则 <code>d1</code> 执行 <code>a1</code> ， <code>d2</code> 执行 <code>a2</code></li><li>兼容模式: 每个设备执行相同的 Action。如: 该计划添加了 2 个可用 Action: <code>a1, a2</code>，2 个设备: <code>d1, d2</code>，则<code>d1</code>执行<code>a1, a2</code>，<code>d2</code>也执行<code>a1, a2</code></li></ul><h3 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h3><ul><li><p>设备排序: 拖拽已添加的设备调整顺序。设备排序只对<code>高效模式</code>有用，排在上面的设备，优先分配到 Action。如: 有 3 个设备，2 个 Action，排在最后的设备分配不到 Action</p></li><li><p>Action 排序: 拖拽已添加的 Action 调整顺序，设备将按序执行 Action。</p></li></ul><h2 id="执行记录" tabindex="-1">执行记录 <a class="header-anchor" href="#执行记录" aria-label="Permalink to &quot;执行记录&quot;">​</a></h2><p><code>计划</code>提交执行后，将生成执行记录。闲置设备领取到任务后，开始执行，并实时同步执行结果，可以点击<code>详情</code>跳转到<code>报告</code>页面，查看当前执行状态。<code>报告</code>页面无需登录状态即可访问，可以将<code>报告</code>页面分享给任意人查看。</p>',35),c=[d];function t(r,h,n,u,p,s){return e(),o("div",null,c)}const b=a(l,[["render",t]]);export{q as __pageData,b as default};
